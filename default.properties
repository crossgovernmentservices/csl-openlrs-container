# Deployment Profiles
# Tier 1 and 2 storage strategies
spring.profiles.include: redis,elasticsearch
openlrs.tierOneStorage=RedisPubSubTierOneStorage
openlrs.tierTwoStorage=XApiOnlyElasticsearchTierTwoStorage
#openlrs.tierOneStorage=RedisPubSubTierOneStorage
#openlrs.tierTwoStorage=NormalizedElasticsearchTierTwoStorage


# Redis
# uncomment this line if you are using password protected redis
#spring.redis.password=<somepassword>
# uncomment these lines if you are using redis sentinel for HA
#spring.redis.sentinel.master=openlrsmaster
#spring.redis.sentinel.nodes=<e.g. 127.0.0.1:26379,127.0.0.1:26380,127.0.0.1:26381>
# set this to half of your tomcat max threads
#spring.redis.pool.max-idle=<1/2 tomcat max threads>
#spring.redis.pool.min-idle=<set this to 10% of max-idle>
#spring.redis.pool.max-active=<set this equal to max-idle>
# ELASTICSEARCH
#spring.data.elasticsearch.cluster-name=<your cluster>
#spring.data.elasticsearch.clusterNodes=<ip1:port1,ip2:port2...>
# LOGGING
logging.path=/home/openlrs/log
logging.file=/home/openlrs/log/openlrs.log
logging.config=classpath:logback.xml
logging.level.*=INFO
# TOMCAT
# leaving max-threads at 0 will result in the default (200)
# recommended value 200xCPU (e.g. on AWS ec2 c3.large this value was 400)
server.tomcat.max-threads=5
# SECURITY
auth.basic.username=openlrs
auth.basic.password=openlrs
#auth.oauth.key=<some key>
#auth.oauth.secret=<some secret>
# INSTANCE
# Must be different for each instance in a clustered environment
#instance.name=<some name>
